1、谈谈你是如何理解JS异步编程的，EventLoop、消息队列都是做什么的？什么是宏任务、什么是微任务？
首先js是单线程语言，在执行中如果遇到多项耗时任务，会发生堵塞。
当引入异步编程，可以用回调函数解决，提升工作效率
异步模式利用消息队列和事件循环实现的
将要执行的代码放到消息队列（回调队列）中去，通过事件循环将代码执行在调用栈一次执行

宏任务：
消息队列里的任务，常见的接口请求、定时器等异步任务都是宏任务
执行时可以添加一些额外的需求，可以作为一个新的宏任务进入到队列中排队
也可以作为当前任务的微任务，直接在当前任务结束过后立即执行
绝大部分异步掉用执行都是宏任务，添加到回调队列的尾部去重新排队

微任务：
基于当前任务产生而随当前任务结束后立即执行的任务，所以也是异步任务，
提高整体的响应能力，提高程序的效率。
Promise process.nextTick是微任务
Promise的回调是作为微任务执行
